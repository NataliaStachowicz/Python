#Display the board using lists

from IPython.display import clear_output

def display_board(board):
    clear_output(wait=True)
    print(' ','|',' ','|',' ')
    print(board[1], '|', board[2], '|', board[3])
    print(' ','|',' ','|',' ')
    print('---------')
    print(' ','|',' ','|',' ')
    print(board[4], '|', board[5], '|', board[6])
    print(' ','|',' ','|',' ')
    print('---------')
    print(' ','|',' ','|',' ')
    print(board[7], '|', board[8], '|', board[9])
    print(' ','|',' ','|',' ')
    
 #Player chooses X or O 
    
def player_input():

choice = 'wrong'
acceptable_choice = ['X', 'O']

while choice.upper() not in acceptable_choice:

    choice = input("Please pick a marker 'X' or 'O'")

    if choice.upper() not in acceptable_choice:
        print('Wrong! Please choose either X or O')

if choice == 'X':
    return ('X', 'O') #first player will have X
else:
    return ('O', 'X') #first player will have O

#Take player input and assign it to the board position

def place_marker(board, marker, position):

board[position] = marker


#Check if any Player won

def win_check(board, mark):


for i in range(1,10,3):
    if board[i] == mark and board[i]==board[i+1] and board[i+1] == board[i+2]:
        return True

for i in range(1,4):
    if board[i] == mark and board[i]==board[i+3] and board[i+3] == board[i+6]:
        return True  

f_cross = list(set([board[1],board[5],board[9]]))
s_cross = list(set([board[3],board[5],board[7]]))


if len(f_cross) == 1 and f_cross[0] == mark:
    return True

if len(s_cross) == 1 and s_cross[0] == mark:
    return True

return False      

#Check who starts the game first

import random

def choose_first():
order = random.randint(1,2)

if order == 1:
    return 'Player 1'
else: 
    return 'Player 2'
    
#Check if the position is taken or not

def space_check(board, position):
    return board[position] == ' '
    
    
#Check if the board is full

def full_board_check(board):
    
    for i in range(1,10):
        if space_check(board, i):
            return False
    return True
    
 #Input of Palyer choice of position
 
 def player_choice(board):
    
    position = 'wrong'
    acceptable_choice = range(1,10)
    
    while position not in acceptable_choice or space_check(board,position) == False:
        
        position = int(input("Please pick a position from 1 to 9 :"))

        if position not in acceptable_choice:
            print('Wrong! Please choose a position from 1 to 9')
            
        if space_check(board,position) == False:
            print ('Position taken!')
    
    return position
    
  #Ask if the Player wants to replay
  
  def replay():
    
    replay_ans = input('Do you want to play again? Please choose Yes or No ')
    
    if replay_ans == 'Yes':
        return True
    else:
        return False
        
   #THE GAME
   
   print('Welcome to Tic Tac Toe!')


mockup_board = ['#','1','2','3','4','5','6','7','8','9']

display_board(mockup_board) #display one time to visualize the board
print('These are the positions values to be chosen')

while True:
    # Set the game up here
    #pass 
    
    game_on = True
    
    board = [' ']*10
    player1_marker, player2_marker = player_input() #either ('X', 'O') or ('O','X')
    
    turn = choose_first() #returns 'Player 1' or 'Player 2'
    print(turn + ' will be the first one!')
    
    
    
    
    while game_on:
        #Player 1 Turn
        if turn == 'Player 1':
            display_board(board) #displays the board
            position = player_choice(board) #asks for the position and checks if it is valid and non taken
            place_marker(board, player1_marker, position) #updates the board with marker and position from player 1
           

            if win_check(board, player1_marker) == True:
                
                display_board(board)
                print (f'Congratulation! {turn} You won!')
                game_on = False
            else:
                if full_board_check(board) == True:
                    
                    display_board(board)
                    print('Game over!')
                    break
                else:
                    
                    turn = 'Player 2'
                    clear_output(wait=True)
        
        # Player2's turn.
        else:    #else means that turn = 'Player 2'
            display_board(board) #displays the board
            position = player_choice(board) #asks for the position and checks if it is valid and non taken
            place_marker(board, player2_marker, position) #updates the board with marker and position from player 1
           

            if win_check(board, player2_marker) == True:
               
                display_board(board)
                print (f'Congratulation! {turn} You won!')
                game_on = False
            else:
                if full_board_check(board) == True:
                    
                    display_board(board)
                    print('Game over!')
                    break
                else:
                    
                    turn = 'Player 1'
                    
        
    if not replay():
        break


